#!/usr/bin/env php
<?php
// if you don't want to setup permissions the proper way, just uncomment the following PHP line
// read http://symfony.com/doc/current/book/installation.html#configuration-and-setup for more information
//umask(0000);

set_time_limit(0);
// what if we are not in WordPress mode
if (false === defined( 'ABSPATH' )) {

    define( 'WP_USE_THEMES', false );

    // let's find wp-load.php
    $finder = new Symfony\Component\Finder\Finder();

    $finder->files()
        ->name( 'wp-load.php' )
        ->ignoreUnreadableDirs()
        ->depth( '== 0' )
        ->in( __DIR__ . '/../../' )
        ->in( __DIR__ . '/../../../' )
        ->in( __DIR__ . '/../../../../' )
        ->in( __DIR__ . '/../../../../../' )
        ->in( __DIR__ . '/../../../../../../' )
        ->in( __DIR__ . '/../../../../../../../' )
        ->in( __DIR__ . '/../../../../../../../../' );

    foreach ($finder as $file) {
        require_once( $file->getRealpath() );
        require_once ABSPATH . 'wp-admin/includes/file.php';
    }
}

require_once __DIR__ . '/../libraries/wpalchemy/MetaBox.php';
require_once __DIR__ . '/../libraries/wpalchemy/MediaAccess.php';

require_once __DIR__ . '/bootstrap.php.cache';

require_once __DIR__ . '/MozartKernel.php';

use Symfony\Bundle\FrameworkBundle\Console\Application;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Debug\Debug;

$input = new ArgvInput();
$env = $input->getParameterOption(array('--env', '-e'), getenv('SYMFONY_ENV') ? : 'dev');
$debug = getenv('SYMFONY_DEBUG') !== '0' && !$input->hasParameterOption(array('--no-debug', '')) && $env !== 'prod';

if ($debug) {
    Debug::enable();
}

$kernel = new MozartKernel($env, $debug);
$application = new Application($kernel);
$application->run($input);
